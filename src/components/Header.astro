---
import Logo from '@components/Logo.astro';
import { NAV_LINKS } from '@scripts/constants';
const { url } = Astro;
const { SITE } = import.meta.env;

function isLinkCurrent(href: string) {
  return href === '/' ? url.pathname === '/' : url.pathname.startsWith(href);
}

const links = NAV_LINKS.map(link => ({
  ...link,
  current: isLinkCurrent(link.href),
}));
---

<header>
  <!-- used to prevent clicks below the expanded mobile menu -->
  <div class="overlay"></div>

  <!-- links -->
  <div class="content">
    <!-- logo link -->
    <a href={SITE} class="logo">
      <Logo width={96} />
    </a>

    <div class="standard-links">
      <!-- left links -->
      {
        links.slice(0, 3).map(link => (
          <a href={link.href} target={link.target} class="standard" class:list={[{ current: link.current }]}>
            {link.title}
          </a>
        ))
      }

      <!-- leaves room for the logo link -->
      <div class="spacer"></div>

      <!-- right links -->
      {
        links.slice(3).map(link => (
          <a href={link.href} target={link.target} class="standard" class:list={[{ current: link.current }]}>
            {link.title}
          </a>
        ))
      }
    </div>

    <!-- mobile menu toggle -->
    <input type="checkbox" />
  </div>
</header>

<style lang="scss">
  @mixin mobile {
    @media (max-width: 900px) {
      @content;
    }
  }

  header {
    --box-shadow: 0 calc(var(--sp-1) * -1) var(--sp-4) var(--shadow);
    --font-size: 24px;
    --mobile-logo-size: 96px;
    --lines-size: 32px;
    --mobile-logo-padding: 8px;
    --transition: 200ms;
    position: sticky;
    top: 0;
    left: 0;
    right: 0;
    margin-bottom: var(--sp-2);
    display: grid;
    place-items: center;
    background-color: var(--bg-bold);
    box-shadow: var(--box-shadow);
    z-index: 100;

    /* overlay only used on mobile */
    .overlay {
      display: none;
    }

    .content {
      display: grid;
      place-items: center;

      /* overlap the logo */
      > * {
        grid-row: 1;
        grid-column: 1;
      }

      .standard-links {
        width: 768px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: var(--font-size);

        /* leave room for the logo */
        .spacer {
          width: calc(var(--mobile-logo-size) + (var(--mobile-logo-padding) * 2));
        }

        a {
          outline: none; /* override standard :focus browser behavior */
          color: var(--fg);
          text-decoration: none;
          text-transform: uppercase;
          font-family: 'Big Shoulders Text', sans-serif;
          font-size: inherit;
          padding: 0.1em 0.2em;
          background-color: transparent;
          border-radius: 1px;
          transition: all var(--transition);

          &:is(:hover, :focus, :active) {
            color: var(--red-bold);
          }

          &.current {
            color: var(--fg-mild);
          }
        }
      }

      /* logo link */
      a.logo {
        padding: var(--mobile-logo-padding);
        border-radius: 50%;
        margin-bottom: calc(-4 * var(--mobile-logo-padding));
        background-color: var(--bg-bold);
        line-height: 0;

        :global(img) {
          width: var(--mobile-logo-size);
          height: var(--mobile-logo-size);
          translate: 0 -0.2em;
          transition: all var(--transition);
        }

        &:is(:hover, :focus, :active) :global(img) {
          scale: 1.05;
          opacity: 0.8;
        }
      }

      /* mobile menu toggle (hidden on desktop) */
      input {
        display: none;
      }
    }

    @include mobile {
      --mobile-logo-size: 56px;
      display: flex;

      /* overlay prevents clicking and blurs background */
      .overlay {
        display: block;
        position: fixed;
        inset: 0;
        background-color: var(--fg-mild);
        opacity: 0.5;
        z-index: -1;
        transition: opacity var(--transition);
        will-change: opacity;
      }

      /* links */
      .content {
        flex-grow: 1;
        display: flex;
        justify-content: space-between;
        padding: var(--sp-1);
        background-color: var(--bg-bold);

        .standard-links {
          position: absolute;
          top: 100%;
          left: 0;
          right: 0;
          z-index: -1;
          padding: calc(var(--sp-1) * 1.5) var(--sp-1);
          // height: calc(100dvh - var(--mobile-logo-size) - var(--sp-2));
          width: unset;
          flex-direction: column;
          justify-content: start;
          align-items: end;
          gap: var(--sp-half);
          background-color: var(--bg);
          will-change: translate;
          transition: translate var(--transition);

          /* hide spacer */
          .spacer {
            display: none;
          }
        }

        a.logo {
          padding: 0;
          margin-bottom: 0;
        }
      }

      /* mobile menu toggle */
      input {
        display: block !important;
        appearance: none;
        width: var(--lines-size);
        height: var(--lines-size);
        background-repeat: no-repeat;
        background-position: center;
        cursor: pointer;

        /* logos from https://fontawesome.com */
        /* url-encoded at https://yoksel.github.io */
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 448 512'%3E%3C!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--%3E%3Cpath d='M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z'/%3E%3C/svg%3E");

        &:checked {
          background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 384 512'%3E%3C!--!Font Awesome Free 6.5.1 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--%3E%3Cpath d='M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z'/%3E%3C/svg%3E");
        }
      }

      /* closed menu */
      &:not(.open) {
        .overlay {
          display: none;
          opacity: 0;
          pointer-events: none;
        }
        .content {
          .standard-links {
            translate: 0 -100%;
          }
        }
      }
    }
  }
</style>

<script>
  const header = document.querySelector<HTMLElement>('header');
  const overlay = header?.querySelector<HTMLElement>('.overlay');
  const checkbox = header?.querySelector<HTMLInputElement>('input');

  /* toggle the mobile menu */
  function toggleOpen(force?: boolean) {
    const value = header?.classList.toggle('open', force) ?? false;
    if (!!checkbox && checkbox.checked !== value) checkbox.checked = value;
  }

  /* checkbox toggles the menu */
  checkbox?.addEventListener('change', () => toggleOpen());

  /* close menu on scroll */
  window.addEventListener('scroll', () => toggleOpen(false));

  /* close menu on click */
  overlay?.addEventListener('click', () => toggleOpen(false));

  /* if any child of the body is clicked (aside from header) */
  /* then the menu will be closed */
  Array.from(document.querySelector('body')?.children ?? []).forEach(element => {
    if (element !== header) {
      element.addEventListener('click', () => toggleOpen(false));
    }
  });
</script>
