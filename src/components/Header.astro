---
type Link = {
  href: string;
  title: string;
  target: string;
  current: boolean;
};
import Logo from './Logo.astro';
const { url } = Astro;
const links: Link[] = [
  {
    title: 'Home',
    href: '/',
  },
  {
    title: 'Rules',
    href: '/rules',
  },
  {
    title: 'History',
    href: '/history',
  },
  {
    title: 'Media',
    href: '/media',
  },
  {
    title: 'Shop',
    href: 'https://thetownballzone.square.site',
  },
  {
    title: 'Contact',
    href: '/contact',
  },
].map((link) => ({
  ...link,
  target: /^https?/.test(link.href) ? '_blank' : '_self',
  current: link.href === '/' ? url.pathname === '/' : url.pathname.startsWith(link.href),
}));
---

<header>
  <div>
    <!-- left links -->
    {
      links.slice(0, 3).map((link) => (
        <a href={link.href} target={link.target} class:list={[{ current: link.current }]}>
          {link.title}
        </a>
      ))
    }

    <!-- logo -->
    <a href="/" class="logo-link">
      <Logo width={128} />
    </a>

    <!-- right links -->
    {
      links.slice(3).map((link) => (
        <a href={link.href} target={link.target} class:list={[{ current: link.current }]}>
          {link.title}
        </a>
      ))
    }
  </div>
</header>

<style lang="scss">
  header {
    --box-shadow: 0 calc(var(--sp-1) * -1) var(--sp-4) var(--shadow);
    display: flex;
    justify-content: center;
    align-items: center;
    position: sticky;
    top: 0;
    margin-bottom: var(--sp-4);
    background-color: var(--bg-bold);
    box-shadow: var(--box-shadow);
    z-index: 100;

    // content
    > div {
      flex-grow: 1;
      max-width: 768px;
      display: flex;
      justify-content: space-between;
      align-items: inherit;

      // all links
      a {
        color: var(--fg);
        text-decoration: none;
        text-transform: uppercase;
        font-family: 'Big Shoulders Text', sans-serif;
        font-size: 24px;
        padding: 0.1em 0.2em;
        background-color: transparent;
        transition: 100ms;
        border-radius: 1px;
        outline: none; /* override default :focus browser behavior */

        &:not(.logo-link):is(:hover, :focus, :active) {
          background-color: var(--highlight);
        }

        &.current {
          border-top: 2px solid var(--fg-mild);
          border-bottom: 2px solid var(--fg-mild);
        }
      }

      // logo link
      .logo-link {
        position: relative;
        padding: var(--sp-1);
        border-radius: 50%;
        margin: calc(-0.5 * var(--sp-1)) 0 calc(-2 * var(--sp-1));
        background-color: var(--bg-bold);

        :global(img) {
          transition: 200ms;
        }

        &:is(:hover, :focus, :active) :global(img) {
          opacity: 0.75;
          transition: 50ms;
        }
      }
    }
  }
</style>
