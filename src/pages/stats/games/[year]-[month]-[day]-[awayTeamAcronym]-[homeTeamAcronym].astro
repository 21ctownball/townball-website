---
import Default from '@layouts/Default.astro';
import { getGameFilePaths, loadGame } from '@scripts/data/games';
import { getPlayers } from '@scripts/data/players';
import { getTeamId } from '@scripts/data/teams';
import { gameSchema } from '@scripts/schemas';
import { getFormattedDatetime } from '@scripts/utils';

// Create page for each game
export function getStaticPaths() {
	const gameScoreboardFiles = getGameFilePaths();
	return gameScoreboardFiles.map(data => ({
		params: data,
		props: data,
	}));
}

// Extract route params
const gameMetadata = Astro.props;

// Fetch data
const game = await loadGame(gameMetadata);
const players = await getPlayers();

// Replace GUIDs with team and player names
const teamMap = {
	[getTeamId(game.homeTeam)]: game.homeTeam,
	[getTeamId(game.visitingTeam)]: game.visitingTeam,
};
const playerMap = game.atBats.flatMap(row => [
	row.batter,
	row.pitcher,
	row.fielder,
	row.assist,
	row.assist_1,
	row.assist_2,
	row.assist_3,
	row.assist_4,
	row.assist_5,
	row.assist_6,
	row.error,
	row.error_1,
	row.error_2,
	row.error_3,
	row.error_4,
]).reduce((acc, player) => {
	if (player && !acc[player]) {
		// This will throw if player is not found
		acc[player] = players.find(p => p.id === player)!;
	}
	return acc;
}, {} as Record<number, typeof players[number]>);

// Create header
const homeTeamAcronym = game.homeTeam.acronym;
const visitingTeamAcronym = game.visitingTeam.acronym;
const header = `${getFormattedDatetime(`${game.year}-${game.month}-${game.day}`)}: ${visitingTeamAcronym} v ${homeTeamAcronym}`;
---

<Default title={`Statistics | Games | ${game.year}-${game.month}-${game.day} ${visitingTeamAcronym} v ${homeTeamAcronym}`}>
	<div class="header">
		<h1>{header}</h1>
		<hr class="stats">
	</div>
	<div class="table-container">
		{
			<table class="stats">
				<thead>
					<tr>
						<th title={gameSchema.element.shape.at_bat.description}>At-bat</th>
						<th title={gameSchema.element.shape.batting_team.description}>Batting Team</th>
						<th title={gameSchema.element.shape.pitching_team.description}>Pitching Team</th>
						<th title={gameSchema.element.shape.batter.description}>Batter</th>
						<th title={gameSchema.element.shape.pitcher.description}>Pitcher</th>
						<th title={gameSchema.element.shape.attempt.description}>Attempt</th>
						<th title={gameSchema.element.shape.rbi.description}>Runs batted in</th>
						<th title={gameSchema.element.shape.single.description}>Single</th>
						<th title={gameSchema.element.shape.double.description}>Double</th>
						<th title={gameSchema.element.shape.triple.description}>Triple</th>
						<th title={gameSchema.element.shape.quadruple.description}>Quadruple</th>
						<th title={gameSchema.element.shape.home_run.description}>Home Run</th>
						<th title={gameSchema.element.shape.steal1.description}>Steal 1st</th>
						<th title={gameSchema.element.shape.steal2.description}>Steal 2nd</th>
						<th title={gameSchema.element.shape.steal3.description}>Steal 3rd</th>
						<th title={gameSchema.element.shape.steal4.description}>Steal 4th</th>
						<th title={gameSchema.element.shape.steal5.description}>Steal Home</th>
						<th title={gameSchema.element.shape.adv1.description}>Advanced to First</th>
						<th title={gameSchema.element.shape.adv2.description}>Advanced to Second</th>
						<th title={gameSchema.element.shape.adv3.description}>Advanced to Third</th>
						<th title={gameSchema.element.shape.adv4.description}>Advanced to Fourth</th>
						<th title={gameSchema.element.shape.adv5.description}>Advanced to Home</th>
						<th title={gameSchema.element.shape.strikeout.description}>Strikeout</th>
						<th title={gameSchema.element.shape.zone.description}>Zone</th>
						<th title={gameSchema.element.shape.flyout.description}>Flyout</th>
						<th title={gameSchema.element.shape.tag.description}>Tag</th>
						<th title={gameSchema.element.shape.peg.description}>Peg</th>
						<th title={gameSchema.element.shape.fielder.description}>Fielder</th>
						<th title={gameSchema.element.shape.assist.description}>Assist</th>
						<th title={gameSchema.element.shape.error.description}>Error</th>
						<th title={gameSchema.element.shape.notes.description}>Notes</th>
					</tr>
				</thead>
				<tbody>
					{game.atBats.map(atBat => (
						<tr>
							<td>{atBat.at_bat}</td>
							<td>
								<a href={`/stats/teams/${atBat.batting_team.split('-').join('/')}`}>{teamMap[atBat.batting_team].acronym}</a>
							</td>
							<td>
								<a href={`/stats/teams/${atBat.pitching_team.split('-').join('/')}`}>{teamMap[atBat.pitching_team].acronym}</a>
							</td>
							<td>
								{atBat.batter !== null && playerMap[atBat.batter] && <a href={`/stats/players/${atBat.batter}`}>{playerMap[atBat.batter].first_name} {playerMap[atBat.batter].last_name}</a>}
								{atBat.batter !== null && !playerMap[atBat.batter] && <span hidden>Player {atBat.batter} not found</span>}
								{atBat.batter === null && <span hidden>Unspecified</span>}
							</td>
							<td>
								{atBat.pitcher !== null && playerMap[atBat.pitcher] && <a href={`/stats/players/${atBat.pitcher}`}>{playerMap[atBat.pitcher].first_name} {playerMap[atBat.pitcher].last_name}</a>}
								{atBat.pitcher !== null && !playerMap[atBat.pitcher] && <span hidden>Player {atBat.pitcher} not found</span>}
								{atBat.pitcher === null && <span hidden>Unspecified</span>}
							</td>
							<td>{atBat.attempt}</td>
							<td>{atBat.rbi}</td>
							<td>{atBat.single}</td>
							<td>{atBat.double}</td>
							<td>{atBat.triple}</td>
							<td>{atBat.quadruple}</td>
							<td>{atBat.home_run}</td>
							<td>{atBat.steal1}</td>
							<td>{atBat.steal2}</td>
							<td>{atBat.steal3}</td>
							<td>{atBat.steal4}</td>
							<td>{atBat.steal5}</td>
							<td>{atBat.adv1}</td>
							<td>{atBat.adv2}</td>
							<td>{atBat.adv3}</td>
							<td>{atBat.adv4}</td>
							<td>{atBat.adv5}</td>
							<td>{atBat.strikeout}</td>
							<td>{atBat.zone}</td>
							<td>{atBat.flyout}</td>
							<td>{atBat.tag}</td>
							<td>{atBat.peg}</td>
							<td>
								{atBat.fielder !== null && playerMap[atBat.fielder] && <a href={`/stats/players/${atBat.fielder}`}>{playerMap[atBat.fielder].first_name} {playerMap[atBat.fielder].last_name}</a>}
							</td>
							<td>
								{atBat.assist !== null && playerMap[atBat.assist] && <a href={`/stats/players/${atBat.assist}`}>{playerMap[atBat.assist].first_name} {playerMap[atBat.assist].last_name}</a>}
								{atBat.assist_1 !== null && playerMap[atBat.assist_1] && (
									<span>
										{', '}
										<a href={`/stats/players/${atBat.assist}`}>{playerMap[atBat.assist_1].first_name} {playerMap[atBat.assist_1].last_name}</a>
									</span>
								)}
								{atBat.assist_2 !== null && playerMap[atBat.assist_2] && (
									<span>
										{', '}
										<a href={`/stats/players/${atBat.assist}`}>{playerMap[atBat.assist_2].first_name} {playerMap[atBat.assist_2].last_name}</a>
									</span>
								)}
								{atBat.assist_3 !== null && playerMap[atBat.assist_3] && (
									<span>
										{', '}
										<a href={`/stats/players/${atBat.assist}`}>{playerMap[atBat.assist_3].first_name} {playerMap[atBat.assist_3].last_name}</a>
									</span>
								)}
								{atBat.assist_3 !== null && playerMap[atBat.assist_3] && (
									<span>
										{', '}
										<a href={`/stats/players/${atBat.assist}`}>{playerMap[atBat.assist_3].first_name} {playerMap[atBat.assist_3].last_name}</a>
									</span>
								)}
								{atBat.assist_3 !== null && playerMap[atBat.assist_3] && (
									<span>
										{', '}
										<a href={`/stats/players/${atBat.assist}`}>{playerMap[atBat.assist_3].first_name} {playerMap[atBat.assist_3].last_name}</a>
									</span>
								)}
								{atBat.assist_4 !== null && playerMap[atBat.assist_4] && (
									<span>
										{', '}
										<a href={`/stats/players/${atBat.assist}`}>{playerMap[atBat.assist_4].first_name} {playerMap[atBat.assist_4].last_name}</a>
									</span>
								)}
								{atBat.assist_5 !== null && playerMap[atBat.assist_5] && (
									<span>
										{', '}
										<a href={`/stats/players/${atBat.assist}`}>{playerMap[atBat.assist_5].first_name} {playerMap[atBat.assist_5].last_name}</a>
									</span>
								)}
								{atBat.assist_6 !== null && playerMap[atBat.assist_6] && (
									<span>
										{', '}
										<a href={`/stats/players/${atBat.assist}`}>{playerMap[atBat.assist_6].first_name} {playerMap[atBat.assist_6].last_name}</a>
									</span>
								)}
							</td>
							<td>
								{atBat.error !== null && playerMap[atBat.error] && <a href={`/stats/players/${atBat.error}`}>{playerMap[atBat.error].first_name} {playerMap[atBat.error].last_name}</a>}
								{atBat.error_1 !== null && playerMap[atBat.error_1] && (
									<span>
										{', '}
										<a href={`/stats/players/${atBat.error}`}>{playerMap[atBat.error_1].first_name} {playerMap[atBat.error_1].last_name}</a>
									</span>
								)}
								{atBat.error_2 !== null && playerMap[atBat.error_2] && (
									<span>
										{', '}
										<a href={`/stats/players/${atBat.error}`}>{playerMap[atBat.error_2].first_name} {playerMap[atBat.error_2].last_name}</a>
									</span>
								)}
								{atBat.error_3 !== null && playerMap[atBat.error_3] && (
									<span>
										{', '}
										<a href={`/stats/players/${atBat.error}`}>{playerMap[atBat.error_3].first_name} {playerMap[atBat.error_3].last_name}</a>
									</span>
								)}
								{atBat.error_4 !== null && playerMap[atBat.error_4] && (
									<span>
										{', '}
										<a href={`/stats/players/${atBat.error}`}>{playerMap[atBat.error_4].first_name} {playerMap[atBat.error_4].last_name}</a>
									</span>
								)}
							</td>
							<td>{atBat.notes}</td>
						</tr>
					))}
				</tbody>
			</table>
		}
	</div>
</Default>

<style lang="scss" is:global>
main {
	max-width: unset;
}

.header {
	margin: auto;
	max-width: var(--content-width);
}

.table-container {
	overflow-x: scroll;

	table {
		--margin-x: var(--sp-1);
		margin-left: var(--margin-x);
		margin-right: var(--margin-x);

		@media (min-width: 576px) {
			--margin-x: var(--sp-2);
		}
	}
}

th, td {
	white-space: nowrap;
}

td {
	background-color: #fff8;
	padding: 0.5em;
}
</style>